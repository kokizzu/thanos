// Code generated by "stringer -type LexState"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Clear-0]
	_ = x[InSymbol-1]
	_ = x[InGlobal-2]
	_ = x[InFloat-3]
	_ = x[InNumber-4]
	_ = x[InCVar-5]
	_ = x[InIVar-6]
	_ = x[InPunct-7]
	_ = x[InInterpString-8]
	_ = x[InInterp-9]
	_ = x[InRegex-10]
	_ = x[OpenBrace-11]
}

const _LexState_name = "ClearInSymbolInGlobalInFloatInNumberInCVarInIVarInPunctInInterpStringInInterpInRegexOpenBrace"

var _LexState_index = [...]uint8{0, 5, 13, 21, 28, 36, 42, 48, 55, 69, 77, 84, 93}

func (i LexState) String() string {
	if i < 0 || i >= LexState(len(_LexState_index)-1) {
		return "LexState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LexState_name[_LexState_index[i]:_LexState_index[i+1]]
}
